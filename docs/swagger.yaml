basePath: /api
definitions:
  auth.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  auth.RegisterRequest:
    properties:
      admin_code:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  member.CreateMemberRequest:
    properties:
      birthdate:
        type: string
      gender:
        enum:
        - Male
        - Female
        type: string
      level:
        type: string
      nama_belakang:
        type: string
      nama_depan:
        type: string
    required:
    - birthdate
    - gender
    - level
    - nama_belakang
    - nama_depan
    type: object
  responses.ErrorMessage:
    properties:
      message:
        description: StatusCode int    `json:"statusCode"`
        type: string
    type: object
  responses.MemberResponse:
    properties:
      birthdate:
        type: string
      gender_id:
        type: integer
      id:
        type: integer
      join_date:
        type: string
      level_id:
        type: integer
      nama_belakang:
        type: string
      nama_depan:
        type: string
      update_at:
        type: string
      user_id:
        type: integer
    type: object
  responses.Token:
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImFwdXRyYWRld2FudGFyYUBnbWFpbC5jb20iLCJ1c2VybmFtZSI6ImFsaWZkd3QiLCJhZ2UiOjI0LCJpc3MiOiIxNzEwODY5NTgzIiwic3ViIjoiMiIsImV4cCI6MTcxMDg3MTM4MywiaWF0IjoxNzEwODY5NTgzLCJqdGkiOiI3OTQzZDc0Ny04Mzk1LTRlMzktYmZmYS1iM2RiODM0ZGZjNmEifQ.Ngh-kJiAh3_nEmaWP5emX2iZSTF-4IAykH6VC9szyxY
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: aputradewantara@gmail.com
    name: Alif Dewantara
    url: http://github.com/alifdwt
  description: This is K-Link Technical Test API for Developer position
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: K-Link Technical Test API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      summary: Login to the application
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      summary: Register to the application
      tags:
      - auth
  /member/create:
    post:
      consumes:
      - application/json
      description: Create new member
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/member.CreateMemberRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.MemberResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Create new member
      tags:
      - member
  /member/showAll:
    get:
      consumes:
      - application/json
      description: Get all member
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/responses.MemberResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get all member
      tags:
      - member
  /member/showById/{id}:
    get:
      consumes:
      - application/json
      description: Get member by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.MemberResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.ErrorMessage'
      security:
      - BearerAuth: []
      summary: Get member by id
      tags:
      - member
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
